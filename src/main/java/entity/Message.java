package entity;
// Generated May 8, 2017 8:56:39 AM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import org.codehaus.jackson.map.ObjectMapper;

/**
 * Message generated by hbm2java
 */
@Entity
@XmlRootElement
public class Message implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7446764279549255670L;
	@Id
	@GeneratedValue
	private int idMessage;
	@ManyToOne
	private Doctor doctor;
	@ManyToOne
	private Users users;
	private Date times;
	private String content;
	private Boolean isRecent;
	private Boolean isReply;
	private Boolean isRead;
	@OneToOne(mappedBy = "message")
	private Questionmessage questionmessage;
	@OneToMany
	private Set<Message> messagesForIdMessage = new HashSet<Message>(0);
	@OneToMany
	private Set<Message> messagesForIdReplyMessage = new HashSet<Message>(0);

	public Message() {
	}

	public Message(int idMessage, Date times) {
		this.idMessage = idMessage;
		this.times = times;
	}

	public Message(int idMessage, Doctor doctor, Users users, Date times, String content, Boolean isRecent,
			Boolean isReply, Boolean isRead) {
		super();
		this.idMessage = idMessage;
		this.doctor = doctor;
		this.users = users;
		this.times = times;
		this.content = content;
		this.isRecent = isRecent;
		this.isReply = isReply;
		this.isRead = isRead;
	}

	public Message(Doctor doctor, Users users, Date times, String content, Boolean isRecent, Boolean isReply,
			Boolean isRead) {
		super();
		this.doctor = doctor;
		this.users = users;
		this.times = times;
		this.content = content;
		this.isRecent = isRecent;
		this.isReply = isReply;
		this.isRead = isRead;
	}

	public Message(int idMessage, Doctor doctor, Users users, Date times, String content, Boolean isRecent,
			Boolean isReply, Boolean isRead, Questionmessage questionmessage, Set<Message> messagesForIdMessage,
			Set<Message> messagesForIdReplyMessage) {
		super();
		this.idMessage = idMessage;
		this.doctor = doctor;
		this.users = users;
		this.times = times;
		this.content = content;
		this.isRecent = isRecent;
		this.isReply = isReply;
		this.isRead = isRead;
		this.questionmessage = questionmessage;
		this.messagesForIdMessage = messagesForIdMessage;
		this.messagesForIdReplyMessage = messagesForIdReplyMessage;
	}

	public int getIdMessage() {
		return this.idMessage;
	}

	@XmlElement
	public void setIdMessage(int idMessage) {
		this.idMessage = idMessage;
	}

	public Doctor getDoctor() {
		return this.doctor;
	}

	@XmlElement
	public void setDoctor(Doctor doctor) {
		this.doctor = doctor;
	}

	public Users getUsers() {
		return this.users;
	}

	@XmlElement
	public void setUsers(Users users) {
		this.users = users;
	}

	public Date getTimes() {
		return this.times;
	}

	@XmlElement
	public void setTimes(Date times) {
		this.times = times;
	}

	public String getContent() {
		return this.content;
	}

	@XmlElement
	public void setContent(String content) {
		this.content = content;
	}

	public Boolean getIsRecent() {
		return this.isRecent;
	}

	@XmlElement
	public void setIsRecent(Boolean isRecent) {
		this.isRecent = isRecent;
	}

	public Boolean getIsReply() {
		return this.isReply;
	}

	@XmlElement
	public void setIsReply(Boolean isReply) {
		this.isReply = isReply;
	}

	public Boolean getIsRead() {
		return this.isRead;
	}

	@XmlElement
	public void setIsRead(Boolean isRead) {
		this.isRead = isRead;
	}

	public Questionmessage getQuestionmessage() {
		return this.questionmessage;
	}

	@XmlElement
	public void setQuestionmessage(Questionmessage questionmessage) {
		this.questionmessage = questionmessage;
	}

	public Set<Message> getMessagesForIdMessage() {
		return messagesForIdMessage;
	}
	@XmlElement 
	public void setMessagesForIdMessage(Set<Message> messagesForIdMessage) {
		this.messagesForIdMessage = messagesForIdMessage;
	}

	public Set<Message> getMessagesForIdReplyMessage() {
		return messagesForIdReplyMessage;
	}

	@XmlElement
	public void setMessagesForIdReplyMessage(Set<Message> messagesForIdReplyMessage) {
		this.messagesForIdReplyMessage = messagesForIdReplyMessage;
	}

	@Override
	public String toString() {
		return "Message [idMessage=" + idMessage + ", doctor=" + doctor + ", users=" + users + ", times=" + times
				+ ", content=" + content + ", isRecent=" + isRecent + ", isReply=" + isReply + ", isRead=" + isRead
				+ "]";
	}

	public String toJson() {
		ObjectMapper mapper = new ObjectMapper();
		try {
			return mapper.writeValueAsString(this);
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public static Message parseJson(String json) {
		ObjectMapper mapper = new ObjectMapper();
		try {
			Message doctor = mapper.readValue(json, Message.class);
			return doctor;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
}
